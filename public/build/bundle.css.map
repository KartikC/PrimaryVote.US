{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../StateBox.svelte",
    "../../Countdown.svelte",
    "../../App.svelte",
    "../../StateInfo.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {\n        selectedState\n    } from './stores.js';\n\n    export let data;\n\n    function handleClick(data) {\n        console.log(data)\n        selectedState.set(data);\n    }\n</script>\n\n<style>\n    .box {\n        background-color: #f1f1f1;\n        width: 300px;\n        margin: 10px;\n        border: 1px solid #aaa;\n        border-radius: 2px;\n        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\n        padding: 1em;\n        margin: 0 0 1em 0;\n        text-align: center;\n        vertical-align: middle;\n    }\n</style>\n\n<div on:click={handleClick(data)} class=\"box\">\n    {data.name}\n</div>",
    "<style>\n    .day {\n        color: green;\n    }\n</style>\n\n\nYou have\n<span class=\"day\">\n    <slot name=\"days\">\n        <span class=\"missing\">ERROR</span>\n    </slot>\n</span>\ndays to register\n<slot name=\"type\">\n    <span class=\"missing\">ERROR</span>\n</slot>",
    "<script>\n\timport StateList from './StateList.svelte'\n\timport StateInfo from './StateInfo.svelte'\n\timport StateLocator from './StateLocator.svelte'\n\timport {\n\t\tselectedState\n\t} from './stores.js';\n\n\tfunction resetState() {\n\t\tselectedState.set(null);\n\t}\n\n\tfunction supportsGeolocation() {\n\t\treturn ((navigator.geolocation !== null) && (navigator.geolocation !== undefined));\n\t\t//return true;\n\t}\n</script>\n\n<style>\n\t.flex-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n</style>\n\n<svelte:head>\n\t<title>Can I Still Vote? - PrimaryVote.US</title>\n\t<html lang=\"en\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</svelte:head>\n\n\n{#if $selectedState}\n\t <StateInfo/><button on:click={resetState}>back</button>\n{:else}\n\t<div class=\"flex-container\">\n\t\t{#if supportsGeolocation()}\n\t\t<StateLocator/>\n\t\t{/if}\n\t\t<StateList/>\n\t</div>\n{/if}",
    "<script>\n    import {\n        selectedState\n    } from './stores.js';\n    import ReminderModule from './ReminderModule.svelte'\n    import Countdown from './Countdown.svelte'\n\n    let baseURL = 'https://iwillvote.com/register/?lang=en&state='\n    let selectedState_value;\n\n    const unsubscribe = selectedState.subscribe(value => {\n        selectedState_value = value;\n    });\n\n    $: state = selectedState_value;\n    let personDate = new Date(selectedState_value.dates.person);\n    let onlineDate = null;\n    if (selectedState_value.dates.online) {\n        onlineDate = new Date(selectedState_value.dates.online);\n    }\n    let mailDate = new Date(selectedState_value.dates.mail);\n\n    function getDaysUntil(date) {\n        let daysUntil = Math.floor((date - new Date()) / (1000 * 60 * 60 * 24))\n        if (daysUntil >= 0) {\n            return daysUntil\n        } else {\n            return null\n        }\n    }\n\n    function bestOption() {\n        if (getDaysUntil(onlineDate)) {\n            return [getDaysUntil(onlineDate), \"online\"]\n        } else if (getDaysUntil(mailDate)) {\n            return [getDaysUntil(mailDate), \"by mail\"]\n        } else if (getDaysUntil(personDate)) {\n            return [getDaysUntil(personDate), \"in person\"]\n        } else\n            return null\n    }\n</script>\n\n<style>\n\t.flex-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n</style>\n\n<div class=\"flex-container\">\n<h1>{state.name}</h1>\n{#if bestOption()}\n    <Countdown>\n    <span slot=\"days\">{bestOption()[0]}</span>\n    <span slot=\"type\">{bestOption()[1]}</span>\n    </Countdown><br/>\n    <a href=\"{baseURL+state.code}\" target=\"_blank\">Register Now!</a>\n    {#if bestOption()[0] > 7}\n    <br/>-or-<br/>\n    <ReminderModule/>\n    {/if}\n{:else}\n    it may be too late to register but you can double check <a href=\"{baseURL+state.code}\" target=\"_blank\">here.</a>\n{/if}\n</div>"
  ],
  "names": [],
  "mappings": "AAcI,IAAI,cAAC,CAAC,AACF,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC1C,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACjB,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,MAAM,AAC1B,CAAC;ACxBD,IAAI,eAAC,CAAC,AACF,KAAK,CAAE,KAAK,AAChB,CAAC;ACgBJ,eAAe,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACpB,CAAC;ACoBD,eAAe,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACpB,CAAC"
}